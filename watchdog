#!/bin/bash

# Get config from index and attribute
# param 1 : index, exemple : 0
# param 2 : json attribute, exemple : 'user_run'
function get_config {
    jq '.['$1'].'$2'' --raw-output watchdog.conf;
}

function process_checker {
    timestamp=0;
    nb_try=0;
    while [[ $(get_config $1 'enable') == "true" && $(get_config $1 "watchtime") -gt 0 ]];
    do
        if test $(expr $(date +%s) -  $timestamp) -ge $(get_config $1 "watchtime");
        then
            logger -t watchdog "Checking process $(get_config $1 "Name")";
            on_error=$(ps -e | grep $(get_config $1 "Name") >/dev/null && echo 0 || (sudo $(get_config $1 "binary") $(get_config $1 "arguments") >/dev/null 2>/dev/null && logger -t watchdog "Starting of $(get_config $1 'Name')..." && echo 1));
            if [ "$on_error" == "1" ];
            then
                nb_try=$(expr $nb_try + 1);
            else
                nb_try=0;
            fi;
            timestamp=$(date +%s);
            if [ $nb_try -ge $(get_config $1 "nbtrybeforealert") ];
            then
                logger -t watchdog "[ERROR] Alert occured on process : $(get_config $1 "Name")";
            fi;
        fi;
    done;
    if [[ ! $(get_config $1 "watchtime") || $(get_config $1 "watchtime") = "" || $(get_config $1 "watchtime") = 0 || $(get_config $1 "watchtime") -eq 0 ]];
    then
        logger -t "Error of configuration on $(get_config $1 'Name') services";
    fi;
}

# Get length index of configuration
LENGTH=$(expr $(jq length watchdog.conf) - 1);


if [[ $# -eq 1 && $1 = "stop" ]];
then
    pkill watchdog;
elif [[ $# -eq 1 && $1 = "start" ]];
then
    for i in $(seq 0 $LENGTH);
    do
        process_checker $i &
    done;
else
    echo "  ./watchdog start        Start the watchdog"
    echo "  ./watchdog stop         Stop the watchdog"
fi;